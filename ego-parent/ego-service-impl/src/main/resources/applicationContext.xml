<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd" default-autowire="byName">

	<!-- 注解扫描 -->
	<context:component-scan
		base-package="com.bzhang.ego.dubbo.service.impl"></context:component-scan>
	<!-- 加载db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 数据源 -->
	<bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- 创建SqlSessionFactory -->
	<bean name="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="com.bzhang.ego.pojo"></property>
    	<property name="configLocation" value="classpath:mybatis.xml"></property>
	</bean>
	<!-- 扫描器相当于 mybatis.xml 中 mappers 下 package 标签,扫描 com.bzhang.ego.mapper 包后会给对应接口创建对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 要扫描哪个包 -->
		<property name="basePackage" value="com.bzhang.ego.mapper"></property>
		<!-- 和 sessionFactory 产生关系 -->
		<property name="sqlSessionFactoryBeanName" value="factory"></property>
		<!-- <property name="sqlSessionFactory" ref="factory"></property> -->
	</bean>
	
	<!-- 事务管理器 -->
    <bean id="txManage" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 声明式事务 -->
    <tx:advice id="txAdvice" transaction-manager="txManage">
    	<tx:attributes>
    		<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    		<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    		<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
    		<tx:method name="*" read-only="true"/>
    	</tx:attributes>
    </tx:advice>
    <!-- 配置aop -->
    <aop:config>
    	<aop:pointcut expression="execution(* com.bzhang.ego.dubbo.service.impl.*.*(..))" id="mypoint"/>
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="mypoint"/>
    </aop:config>



</beans>